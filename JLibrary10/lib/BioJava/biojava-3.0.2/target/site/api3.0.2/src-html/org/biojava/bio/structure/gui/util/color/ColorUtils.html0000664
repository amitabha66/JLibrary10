<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html lang="en">
<head>
<title>Source code</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../../stylesheet.css" title="Style">
</head>
<body>
<div class="sourceContainer">
<pre><span class="sourceLineNo">001</span>/*<a name="line.1"></a>
<span class="sourceLineNo">002</span> *                    BioJava development code<a name="line.2"></a>
<span class="sourceLineNo">003</span> *<a name="line.3"></a>
<span class="sourceLineNo">004</span> * This code may be freely distributed and modified under the<a name="line.4"></a>
<span class="sourceLineNo">005</span> * terms of the GNU Lesser General Public Licence.  This should<a name="line.5"></a>
<span class="sourceLineNo">006</span> * be distributed with the code.  If you do not have a copy,<a name="line.6"></a>
<span class="sourceLineNo">007</span> * see:<a name="line.7"></a>
<span class="sourceLineNo">008</span> *<a name="line.8"></a>
<span class="sourceLineNo">009</span> *      http://www.gnu.org/copyleft/lesser.html<a name="line.9"></a>
<span class="sourceLineNo">010</span> *<a name="line.10"></a>
<span class="sourceLineNo">011</span> * Copyright for this code is held jointly by the individual<a name="line.11"></a>
<span class="sourceLineNo">012</span> * authors.  These should be listed in @author doc comments.<a name="line.12"></a>
<span class="sourceLineNo">013</span> *<a name="line.13"></a>
<span class="sourceLineNo">014</span> * For more information on the BioJava project and its aims,<a name="line.14"></a>
<span class="sourceLineNo">015</span> * or to join the biojava-l mailing list, visit the home page<a name="line.15"></a>
<span class="sourceLineNo">016</span> * at:<a name="line.16"></a>
<span class="sourceLineNo">017</span> *<a name="line.17"></a>
<span class="sourceLineNo">018</span> *      http://www.biojava.org/<a name="line.18"></a>
<span class="sourceLineNo">019</span> *<a name="line.19"></a>
<span class="sourceLineNo">020</span> * Created on May 20, 2010<a name="line.20"></a>
<span class="sourceLineNo">021</span> * Author: Andreas Prlic <a name="line.21"></a>
<span class="sourceLineNo">022</span> *<a name="line.22"></a>
<span class="sourceLineNo">023</span> */<a name="line.23"></a>
<span class="sourceLineNo">024</span><a name="line.24"></a>
<span class="sourceLineNo">025</span>package org.biojava.bio.structure.gui.util.color;<a name="line.25"></a>
<span class="sourceLineNo">026</span><a name="line.26"></a>
<span class="sourceLineNo">027</span>import java.awt.Color;<a name="line.27"></a>
<span class="sourceLineNo">028</span><a name="line.28"></a>
<span class="sourceLineNo">029</span>public class ColorUtils<a name="line.29"></a>
<span class="sourceLineNo">030</span>{<a name="line.30"></a>
<span class="sourceLineNo">031</span>   <a name="line.31"></a>
<span class="sourceLineNo">032</span>   public static Color orange =   Color.decode("#FFA500");<a name="line.32"></a>
<span class="sourceLineNo">033</span>   public static Color cyan   =   Color.decode("#00FFFF");<a name="line.33"></a>
<span class="sourceLineNo">034</span>   public static Color gold   =   Color.decode("#FFD700");<a name="line.34"></a>
<span class="sourceLineNo">035</span>  <a name="line.35"></a>
<span class="sourceLineNo">036</span>   <a name="line.36"></a>
<span class="sourceLineNo">037</span>   static final Color c1 = Color.decode("#228B22"); // green<a name="line.37"></a>
<span class="sourceLineNo">038</span>   static final Color c2 = Color.decode("#8F8FFF"); // blue   <a name="line.38"></a>
<span class="sourceLineNo">039</span>   static final Color c3 = gold;<a name="line.39"></a>
<span class="sourceLineNo">040</span>   static final Color c4 = Color.decode("#FF8C00"); // orange<a name="line.40"></a>
<span class="sourceLineNo">041</span>   static final Color c5 = Color.decode("#FF00FF"); // pink<a name="line.41"></a>
<span class="sourceLineNo">042</span>   static final Color c6 = Color.decode("#C71585"); // red<a name="line.42"></a>
<span class="sourceLineNo">043</span>   <a name="line.43"></a>
<span class="sourceLineNo">044</span>   public static final Color[] colorWheel = new Color[] {c1, c2, c3, c4 , c5,c6}; <a name="line.44"></a>
<span class="sourceLineNo">045</span><a name="line.45"></a>
<span class="sourceLineNo">046</span>   <a name="line.46"></a>
<span class="sourceLineNo">047</span>   public static void main(String[] args){<a name="line.47"></a>
<span class="sourceLineNo">048</span>      int i = -1;<a name="line.48"></a>
<span class="sourceLineNo">049</span>      for ( Color color : colorWheel){<a name="line.49"></a>
<span class="sourceLineNo">050</span>         i++;<a name="line.50"></a>
<span class="sourceLineNo">051</span>         float af[] = Color.RGBtoHSB(color.getRed(),color.getGreen(),color.getBlue(), null);<a name="line.51"></a>
<span class="sourceLineNo">052</span>         System.out.println("position "  + i + "  " + af[0] + " " + af[1] + " " + af[2]);<a name="line.52"></a>
<span class="sourceLineNo">053</span>         //System.out.println(rotateHue(color, 0.1f));<a name="line.53"></a>
<span class="sourceLineNo">054</span>      }<a name="line.54"></a>
<span class="sourceLineNo">055</span>   }<a name="line.55"></a>
<span class="sourceLineNo">056</span>   <a name="line.56"></a>
<span class="sourceLineNo">057</span>   public static Color rotateHue (Color color, float fraction) {<a name="line.57"></a>
<span class="sourceLineNo">058</span>      <a name="line.58"></a>
<span class="sourceLineNo">059</span>      float af[] = Color.RGBtoHSB(color.getRed(),color.getGreen(),color.getBlue(), null);<a name="line.59"></a>
<span class="sourceLineNo">060</span>      <a name="line.60"></a>
<span class="sourceLineNo">061</span>      float hue = af[0];<a name="line.61"></a>
<span class="sourceLineNo">062</span>      float saturation = af[1];<a name="line.62"></a>
<span class="sourceLineNo">063</span>      float brightness = af[2];<a name="line.63"></a>
<span class="sourceLineNo">064</span>      <a name="line.64"></a>
<span class="sourceLineNo">065</span>      //System.out.println(hue + " " + saturation + " " + brightness);<a name="line.65"></a>
<span class="sourceLineNo">066</span>      <a name="line.66"></a>
<span class="sourceLineNo">067</span>      float hueNew = hue  + fraction;<a name="line.67"></a>
<span class="sourceLineNo">068</span>      <a name="line.68"></a>
<span class="sourceLineNo">069</span>      //System.out.println(hue + " " + hueNew);<a name="line.69"></a>
<span class="sourceLineNo">070</span>      <a name="line.70"></a>
<span class="sourceLineNo">071</span>      if ( hueNew &gt; 1 ){<a name="line.71"></a>
<span class="sourceLineNo">072</span>         hueNew = hueNew - 1;<a name="line.72"></a>
<span class="sourceLineNo">073</span>      }<a name="line.73"></a>
<span class="sourceLineNo">074</span>     <a name="line.74"></a>
<span class="sourceLineNo">075</span>      return Color.getHSBColor(hueNew, saturation, brightness);<a name="line.75"></a>
<span class="sourceLineNo">076</span>   }<a name="line.76"></a>
<span class="sourceLineNo">077</span>   <a name="line.77"></a>
<span class="sourceLineNo">078</span>   public static Color getIntermediate(Color start, Color end, int stepSize, int position ){<a name="line.78"></a>
<span class="sourceLineNo">079</span>      <a name="line.79"></a>
<span class="sourceLineNo">080</span>      float af1[] = Color.RGBtoHSB(start.getRed(),start.getGreen(),start.getBlue(), null);<a name="line.80"></a>
<span class="sourceLineNo">081</span>      <a name="line.81"></a>
<span class="sourceLineNo">082</span>      float af2[] = Color.RGBtoHSB(end.getRed(),end.getGreen(),end.getBlue(), null);<a name="line.82"></a>
<span class="sourceLineNo">083</span>      <a name="line.83"></a>
<span class="sourceLineNo">084</span>      float hue1 = af1[0];<a name="line.84"></a>
<span class="sourceLineNo">085</span>      float hue2 = af2[0];<a name="line.85"></a>
<span class="sourceLineNo">086</span>     <a name="line.86"></a>
<span class="sourceLineNo">087</span>      if ( hue2 &lt; hue1) {<a name="line.87"></a>
<span class="sourceLineNo">088</span>        <a name="line.88"></a>
<span class="sourceLineNo">089</span>         hue2 = af1[0];<a name="line.89"></a>
<span class="sourceLineNo">090</span>         hue1 = af2[0];<a name="line.90"></a>
<span class="sourceLineNo">091</span>      }<a name="line.91"></a>
<span class="sourceLineNo">092</span>      <a name="line.92"></a>
<span class="sourceLineNo">093</span>      //float saturation = af1[1] + af2[1] / 2f;<a name="line.93"></a>
<span class="sourceLineNo">094</span>      //float brightness = af1[2] + af2[2] / 2f;<a name="line.94"></a>
<span class="sourceLineNo">095</span>      <a name="line.95"></a>
<span class="sourceLineNo">096</span>      float range = Math.abs(hue2-hue1);<a name="line.96"></a>
<span class="sourceLineNo">097</span>      <a name="line.97"></a>
<span class="sourceLineNo">098</span>      while ( position &gt; stepSize){<a name="line.98"></a>
<span class="sourceLineNo">099</span>         position = position - stepSize ; <a name="line.99"></a>
<span class="sourceLineNo">100</span>      }<a name="line.100"></a>
<span class="sourceLineNo">101</span>      <a name="line.101"></a>
<span class="sourceLineNo">102</span>      float inc = (range * position / (float) stepSize) ;<a name="line.102"></a>
<span class="sourceLineNo">103</span>      float hueNew = hue1 + inc;<a name="line.103"></a>
<span class="sourceLineNo">104</span>      <a name="line.104"></a>
<span class="sourceLineNo">105</span>      //System.out.println(position + " " + hue1 + " " + hue2 + " new: " + hueNew + " inc " + inc + " range " + range); <a name="line.105"></a>
<span class="sourceLineNo">106</span>      return Color.getHSBColor(hueNew, af1[1], af1[2]);<a name="line.106"></a>
<span class="sourceLineNo">107</span>           <a name="line.107"></a>
<span class="sourceLineNo">108</span>   }<a name="line.108"></a>
<span class="sourceLineNo">109</span>   <a name="line.109"></a>
<span class="sourceLineNo">110</span>   /**<a name="line.110"></a>
<span class="sourceLineNo">111</span>    * Make a color darker. (RGB color scheme)<a name="line.111"></a>
<span class="sourceLineNo">112</span>    * <a name="line.112"></a>
<span class="sourceLineNo">113</span>    * @param color     Color to make darker.<a name="line.113"></a>
<span class="sourceLineNo">114</span>    * @param fraction  Darkness fraction.<a name="line.114"></a>
<span class="sourceLineNo">115</span>    * @return          Darker color.<a name="line.115"></a>
<span class="sourceLineNo">116</span>    */<a name="line.116"></a>
<span class="sourceLineNo">117</span>   public static Color darker (Color color, double fraction)<a name="line.117"></a>
<span class="sourceLineNo">118</span>   {<a name="line.118"></a>
<span class="sourceLineNo">119</span>     int red   = (int) Math.round (color.getRed()   * (1.0 - fraction));<a name="line.119"></a>
<span class="sourceLineNo">120</span>     int green = (int) Math.round (color.getGreen() * (1.0 - fraction));<a name="line.120"></a>
<span class="sourceLineNo">121</span>     int blue  = (int) Math.round (color.getBlue()  * (1.0 - fraction));<a name="line.121"></a>
<span class="sourceLineNo">122</span><a name="line.122"></a>
<span class="sourceLineNo">123</span>     if (red   &lt; 0) red   = 0; else if (red   &gt; 255) red   = 255;<a name="line.123"></a>
<span class="sourceLineNo">124</span>     if (green &lt; 0) green = 0; else if (green &gt; 255) green = 255;<a name="line.124"></a>
<span class="sourceLineNo">125</span>     if (blue  &lt; 0) blue  = 0; else if (blue  &gt; 255) blue  = 255;    <a name="line.125"></a>
<span class="sourceLineNo">126</span><a name="line.126"></a>
<span class="sourceLineNo">127</span>     int alpha = color.getAlpha();<a name="line.127"></a>
<span class="sourceLineNo">128</span><a name="line.128"></a>
<span class="sourceLineNo">129</span>     return new Color (red, green, blue, alpha);<a name="line.129"></a>
<span class="sourceLineNo">130</span>   }<a name="line.130"></a>
<span class="sourceLineNo">131</span><a name="line.131"></a>
<span class="sourceLineNo">132</span>   /**<a name="line.132"></a>
<span class="sourceLineNo">133</span>    * Make a color lighter. (RGB color scheme)<a name="line.133"></a>
<span class="sourceLineNo">134</span>    * <a name="line.134"></a>
<span class="sourceLineNo">135</span>    * @param color     Color to make lighter.<a name="line.135"></a>
<span class="sourceLineNo">136</span>    * @param fraction  Darkness fraction.<a name="line.136"></a>
<span class="sourceLineNo">137</span>    * @return          Lighter color.<a name="line.137"></a>
<span class="sourceLineNo">138</span>    */<a name="line.138"></a>
<span class="sourceLineNo">139</span>   public static Color lighter (Color color, double fraction)<a name="line.139"></a>
<span class="sourceLineNo">140</span>   {<a name="line.140"></a>
<span class="sourceLineNo">141</span>     int red   = (int) Math.round (color.getRed()   * (1.0 + fraction));<a name="line.141"></a>
<span class="sourceLineNo">142</span>     int green = (int) Math.round (color.getGreen() * (1.0 + fraction));<a name="line.142"></a>
<span class="sourceLineNo">143</span>     int blue  = (int) Math.round (color.getBlue()  * (1.0 + fraction));<a name="line.143"></a>
<span class="sourceLineNo">144</span><a name="line.144"></a>
<span class="sourceLineNo">145</span>     if (red   &lt; 0) red   = 0; else if (red   &gt; 255) red   = 255;<a name="line.145"></a>
<span class="sourceLineNo">146</span>     if (green &lt; 0) green = 0; else if (green &gt; 255) green = 255;<a name="line.146"></a>
<span class="sourceLineNo">147</span>     if (blue  &lt; 0) blue  = 0; else if (blue  &gt; 255) blue  = 255;    <a name="line.147"></a>
<span class="sourceLineNo">148</span><a name="line.148"></a>
<span class="sourceLineNo">149</span>     int alpha = color.getAlpha();<a name="line.149"></a>
<span class="sourceLineNo">150</span><a name="line.150"></a>
<span class="sourceLineNo">151</span>     return new Color (red, green, blue, alpha);<a name="line.151"></a>
<span class="sourceLineNo">152</span>   }<a name="line.152"></a>
<span class="sourceLineNo">153</span><a name="line.153"></a>
<span class="sourceLineNo">154</span>}<a name="line.154"></a>




























































</pre>
</div>
</body>
</html>
