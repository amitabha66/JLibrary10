<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html lang="en">
<head>
<title>Source code</title>
<link rel="stylesheet" type="text/css" href="../../../../../stylesheet.css" title="Style">
</head>
<body>
<div class="sourceContainer">
<pre><span class="sourceLineNo">001</span>package org.biojava3.aaproperties.profeat;<a name="line.1"></a>
<span class="sourceLineNo">002</span><a name="line.2"></a>
<span class="sourceLineNo">003</span>import java.util.Map;<a name="line.3"></a>
<span class="sourceLineNo">004</span><a name="line.4"></a>
<span class="sourceLineNo">005</span>import org.biojava3.aaproperties.profeat.IProfeatProperties.ATTRIBUTE;<a name="line.5"></a>
<span class="sourceLineNo">006</span>import org.biojava3.aaproperties.profeat.IProfeatProperties.DISTRIBUTION;<a name="line.6"></a>
<span class="sourceLineNo">007</span>import org.biojava3.aaproperties.profeat.IProfeatProperties.GROUPING;<a name="line.7"></a>
<span class="sourceLineNo">008</span>import org.biojava3.aaproperties.profeat.IProfeatProperties.TRANSITION;<a name="line.8"></a>
<span class="sourceLineNo">009</span>import org.biojava3.core.sequence.ProteinSequence;<a name="line.9"></a>
<span class="sourceLineNo">010</span><a name="line.10"></a>
<span class="sourceLineNo">011</span>/**<a name="line.11"></a>
<span class="sourceLineNo">012</span> * This is an adaptor class which enable the ease of generating profeat properties.<a name="line.12"></a>
<span class="sourceLineNo">013</span> * At least one adaptor method is written for each available properties provided in IProfeatProperties. <a name="line.13"></a>
<span class="sourceLineNo">014</span> * <a name="line.14"></a>
<span class="sourceLineNo">015</span> * @author kohchuanhock<a name="line.15"></a>
<span class="sourceLineNo">016</span> * @version 2011.06.16<a name="line.16"></a>
<span class="sourceLineNo">017</span> * @since 3.0.2<a name="line.17"></a>
<span class="sourceLineNo">018</span> * @see IProfeatProperties<a name="line.18"></a>
<span class="sourceLineNo">019</span> * @see ProfeatPropertiesImpl<a name="line.19"></a>
<span class="sourceLineNo">020</span> */<a name="line.20"></a>
<span class="sourceLineNo">021</span>public class ProfeatProperties {<a name="line.21"></a>
<span class="sourceLineNo">022</span>        /**<a name="line.22"></a>
<span class="sourceLineNo">023</span>         * An adaptor method which returns the composition of the specific grouping for the given attribute.<a name="line.23"></a>
<span class="sourceLineNo">024</span>         * <a name="line.24"></a>
<span class="sourceLineNo">025</span>         * @param sequence<a name="line.25"></a>
<span class="sourceLineNo">026</span>         *      a protein sequence consisting of non-ambiguous characters only<a name="line.26"></a>
<span class="sourceLineNo">027</span>         * @param attribute<a name="line.27"></a>
<span class="sourceLineNo">028</span>         *      one of the seven attributes (Hydrophobicity, Volume, Polarity, Polarizability, Charge, SecondaryStructure or SolventAccessibility)<a name="line.28"></a>
<span class="sourceLineNo">029</span>         * @param group<a name="line.29"></a>
<span class="sourceLineNo">030</span>         *      the grouping to be computed<a name="line.30"></a>
<span class="sourceLineNo">031</span>         * @return<a name="line.31"></a>
<span class="sourceLineNo">032</span>         *      returns the composition of the specific grouping for the given attribute<a name="line.32"></a>
<span class="sourceLineNo">033</span>         * @throws Exception<a name="line.33"></a>
<span class="sourceLineNo">034</span>         *      throws Exception if attribute or group are unknown<a name="line.34"></a>
<span class="sourceLineNo">035</span>         */<a name="line.35"></a>
<span class="sourceLineNo">036</span>        public static double getComposition(ProteinSequence sequence, ATTRIBUTE attribute, GROUPING group) throws Exception{<a name="line.36"></a>
<span class="sourceLineNo">037</span>                return new ProfeatPropertiesImpl().getComposition(sequence, attribute, group);<a name="line.37"></a>
<span class="sourceLineNo">038</span>        }<a name="line.38"></a>
<span class="sourceLineNo">039</span>        <a name="line.39"></a>
<span class="sourceLineNo">040</span>        public static Map&lt;GROUPING, Double&gt; getComposition(ProteinSequence sequence, ATTRIBUTE attribute) throws Exception{<a name="line.40"></a>
<span class="sourceLineNo">041</span>                return new ProfeatPropertiesImpl().getComposition(sequence, attribute);<a name="line.41"></a>
<span class="sourceLineNo">042</span>        }<a name="line.42"></a>
<span class="sourceLineNo">043</span>        <a name="line.43"></a>
<span class="sourceLineNo">044</span>        public static Map&lt;ATTRIBUTE, Map&lt;GROUPING, Double&gt;&gt; getComposition(ProteinSequence sequence) throws Exception{<a name="line.44"></a>
<span class="sourceLineNo">045</span>                return new ProfeatPropertiesImpl().getComposition(sequence);<a name="line.45"></a>
<span class="sourceLineNo">046</span>        }<a name="line.46"></a>
<span class="sourceLineNo">047</span>        <a name="line.47"></a>
<span class="sourceLineNo">048</span>        public static double getComposition(String sequence, ATTRIBUTE attribute, GROUPING group) throws Exception{<a name="line.48"></a>
<span class="sourceLineNo">049</span>                return ProfeatProperties.getComposition(new ProteinSequence(sequence), attribute, group);<a name="line.49"></a>
<span class="sourceLineNo">050</span>        }<a name="line.50"></a>
<span class="sourceLineNo">051</span>        <a name="line.51"></a>
<span class="sourceLineNo">052</span>        public static Map&lt;GROUPING, Double&gt; getComposition(String sequence, ATTRIBUTE attribute) throws Exception{<a name="line.52"></a>
<span class="sourceLineNo">053</span>                return ProfeatProperties.getComposition(new ProteinSequence(sequence), attribute);<a name="line.53"></a>
<span class="sourceLineNo">054</span>        }<a name="line.54"></a>
<span class="sourceLineNo">055</span>        <a name="line.55"></a>
<span class="sourceLineNo">056</span>        public static Map&lt;ATTRIBUTE, Map&lt;GROUPING, Double&gt;&gt; getComposition(String sequence) throws Exception{<a name="line.56"></a>
<span class="sourceLineNo">057</span>                return ProfeatProperties.getComposition(new ProteinSequence(sequence));<a name="line.57"></a>
<span class="sourceLineNo">058</span>        }<a name="line.58"></a>
<span class="sourceLineNo">059</span>        <a name="line.59"></a>
<span class="sourceLineNo">060</span>        /**<a name="line.60"></a>
<span class="sourceLineNo">061</span>         * An adaptor method which returns the number of transition between the specified groups for the given attribute with respect to the length of sequence.<a name="line.61"></a>
<span class="sourceLineNo">062</span>         * <a name="line.62"></a>
<span class="sourceLineNo">063</span>         * @param sequence<a name="line.63"></a>
<span class="sourceLineNo">064</span>         *      a protein sequence consisting of non-ambiguous characters only<a name="line.64"></a>
<span class="sourceLineNo">065</span>         * @param attribute<a name="line.65"></a>
<span class="sourceLineNo">066</span>         *      one of the seven attributes (Hydrophobicity, Volume, Polarity, Polarizability, Charge, SecondaryStructure or SolventAccessibility)<a name="line.66"></a>
<span class="sourceLineNo">067</span>         * @param transition<a name="line.67"></a>
<span class="sourceLineNo">068</span>         *      the interested transition between the groups<a name="line.68"></a>
<span class="sourceLineNo">069</span>         * @return<a name="line.69"></a>
<span class="sourceLineNo">070</span>         *  returns the number of transition between the specified groups for the given attribute with respect to the length of sequence.<a name="line.70"></a>
<span class="sourceLineNo">071</span>         * @throws Exception<a name="line.71"></a>
<span class="sourceLineNo">072</span>         *      throws Exception if attribute or group are unknown<a name="line.72"></a>
<span class="sourceLineNo">073</span>         */<a name="line.73"></a>
<span class="sourceLineNo">074</span>        public static double getTransition(ProteinSequence sequence, ATTRIBUTE attribute, TRANSITION transition) throws Exception{<a name="line.74"></a>
<span class="sourceLineNo">075</span>                return new ProfeatPropertiesImpl().getTransition(sequence, attribute, transition);<a name="line.75"></a>
<span class="sourceLineNo">076</span>        }<a name="line.76"></a>
<span class="sourceLineNo">077</span>        <a name="line.77"></a>
<span class="sourceLineNo">078</span>        public static Map&lt;TRANSITION, Double&gt; getTransition(ProteinSequence sequence, ATTRIBUTE attribute) throws Exception{<a name="line.78"></a>
<span class="sourceLineNo">079</span>                return new ProfeatPropertiesImpl().getTransition(sequence, attribute);<a name="line.79"></a>
<span class="sourceLineNo">080</span>        }<a name="line.80"></a>
<span class="sourceLineNo">081</span>        <a name="line.81"></a>
<span class="sourceLineNo">082</span>        public static Map&lt;ATTRIBUTE, Map&lt;TRANSITION, Double&gt;&gt; getTransition(ProteinSequence sequence) throws Exception{<a name="line.82"></a>
<span class="sourceLineNo">083</span>                return new ProfeatPropertiesImpl().getTransition(sequence);<a name="line.83"></a>
<span class="sourceLineNo">084</span>        }<a name="line.84"></a>
<span class="sourceLineNo">085</span>        <a name="line.85"></a>
<span class="sourceLineNo">086</span>        public static double getTransition(String sequence, ATTRIBUTE attribute, TRANSITION transition) throws Exception{<a name="line.86"></a>
<span class="sourceLineNo">087</span>                return ProfeatProperties.getTransition(new ProteinSequence(sequence), attribute, transition);<a name="line.87"></a>
<span class="sourceLineNo">088</span>        }<a name="line.88"></a>
<span class="sourceLineNo">089</span>        <a name="line.89"></a>
<span class="sourceLineNo">090</span>        public static Map&lt;TRANSITION, Double&gt; getTransition(String sequence, ATTRIBUTE attribute) throws Exception{<a name="line.90"></a>
<span class="sourceLineNo">091</span>                return ProfeatProperties.getTransition(new ProteinSequence(sequence), attribute);<a name="line.91"></a>
<span class="sourceLineNo">092</span>        }<a name="line.92"></a>
<span class="sourceLineNo">093</span>        <a name="line.93"></a>
<span class="sourceLineNo">094</span>        public static Map&lt;ATTRIBUTE, Map&lt;TRANSITION, Double&gt;&gt; getTransition(String sequence) throws Exception{<a name="line.94"></a>
<span class="sourceLineNo">095</span>                return ProfeatProperties.getTransition(new ProteinSequence(sequence));<a name="line.95"></a>
<span class="sourceLineNo">096</span>        }<a name="line.96"></a>
<span class="sourceLineNo">097</span>        <a name="line.97"></a>
<span class="sourceLineNo">098</span>        /**<a name="line.98"></a>
<span class="sourceLineNo">099</span>         * An adaptor method which computes and return the position with respect to the sequence where the given distribution of the grouping can be found.&lt;br/&gt;<a name="line.99"></a>
<span class="sourceLineNo">100</span>         * Example: "1111122222"&lt;br/&gt;<a name="line.100"></a>
<span class="sourceLineNo">101</span>         * For the above example,&lt;br/&gt;<a name="line.101"></a>
<span class="sourceLineNo">102</span>         * position of the GROUPING.GROUP1 &amp;&amp; DISTRIBUTION.FIRST = 0/10 (because the first occurrence of '1' is at position 0)&lt;br/&gt; <a name="line.102"></a>
<span class="sourceLineNo">103</span>         * position of the GROUPING.GROUP1 &amp;&amp; DISTRIBUTION.ALL = 4/10 (because all occurrences of '1' happens on and before position 4)&lt;br/&gt;<a name="line.103"></a>
<span class="sourceLineNo">104</span>         * <a name="line.104"></a>
<span class="sourceLineNo">105</span>         * @param sequence<a name="line.105"></a>
<span class="sourceLineNo">106</span>         *      a protein sequence consisting of non-ambiguous characters only<a name="line.106"></a>
<span class="sourceLineNo">107</span>         * @param attribute<a name="line.107"></a>
<span class="sourceLineNo">108</span>         *      one of the seven attributes (Hydrophobicity, Volume, Polarity, Polarizability, Charge, SecondaryStructure or SolventAccessibility)<a name="line.108"></a>
<span class="sourceLineNo">109</span>         * @param group <a name="line.109"></a>
<span class="sourceLineNo">110</span>         *      one the three groups for the attribute<a name="line.110"></a>
<span class="sourceLineNo">111</span>         * @param distribution<a name="line.111"></a>
<span class="sourceLineNo">112</span>         *      the distribution of the grouping<a name="line.112"></a>
<span class="sourceLineNo">113</span>         *      <a name="line.113"></a>
<span class="sourceLineNo">114</span>         * @return<a name="line.114"></a>
<span class="sourceLineNo">115</span>         *      the position with respect to the length of sequence where the given distribution of the grouping can be found.&lt;br/&gt; <a name="line.115"></a>
<span class="sourceLineNo">116</span>         * @throws Exception<a name="line.116"></a>
<span class="sourceLineNo">117</span>         *      throws Exception if attribute or group are unknown<a name="line.117"></a>
<span class="sourceLineNo">118</span>         */<a name="line.118"></a>
<span class="sourceLineNo">119</span>        public static double getDistributionPosition(ProteinSequence sequence, ATTRIBUTE attribute, GROUPING group, DISTRIBUTION distribution) throws Exception{<a name="line.119"></a>
<span class="sourceLineNo">120</span>                return new ProfeatPropertiesImpl().getDistributionPosition(sequence, attribute, group, distribution);<a name="line.120"></a>
<span class="sourceLineNo">121</span>        }<a name="line.121"></a>
<span class="sourceLineNo">122</span>        <a name="line.122"></a>
<span class="sourceLineNo">123</span>        public static Map&lt;DISTRIBUTION, Double&gt; getDistributionPosition(ProteinSequence sequence, ATTRIBUTE attribute, GROUPING group) throws Exception{<a name="line.123"></a>
<span class="sourceLineNo">124</span>                return new ProfeatPropertiesImpl().getDistributionPosition(sequence, attribute, group);<a name="line.124"></a>
<span class="sourceLineNo">125</span>        }<a name="line.125"></a>
<span class="sourceLineNo">126</span>        <a name="line.126"></a>
<span class="sourceLineNo">127</span>        public static Map&lt;GROUPING, Map&lt;DISTRIBUTION, Double&gt;&gt; getDistributionPosition(ProteinSequence sequence, ATTRIBUTE attribute) throws Exception{<a name="line.127"></a>
<span class="sourceLineNo">128</span>                return new ProfeatPropertiesImpl().getDistributionPosition(sequence, attribute);<a name="line.128"></a>
<span class="sourceLineNo">129</span>        }<a name="line.129"></a>
<span class="sourceLineNo">130</span>        <a name="line.130"></a>
<span class="sourceLineNo">131</span>        public static Map&lt;ATTRIBUTE , Map&lt;GROUPING, Map&lt;DISTRIBUTION, Double&gt;&gt;&gt; getDistributionPosition(ProteinSequence sequence) throws Exception{<a name="line.131"></a>
<span class="sourceLineNo">132</span>                return new ProfeatPropertiesImpl().getDistributionPosition(sequence);<a name="line.132"></a>
<span class="sourceLineNo">133</span>        }<a name="line.133"></a>
<span class="sourceLineNo">134</span>        <a name="line.134"></a>
<span class="sourceLineNo">135</span>        public static double getDistributionPosition(String sequence, ATTRIBUTE attribute, GROUPING group, DISTRIBUTION distribution) throws Exception{<a name="line.135"></a>
<span class="sourceLineNo">136</span>                return ProfeatProperties.getDistributionPosition(new ProteinSequence(sequence), attribute, group, distribution);<a name="line.136"></a>
<span class="sourceLineNo">137</span>        }<a name="line.137"></a>
<span class="sourceLineNo">138</span>        <a name="line.138"></a>
<span class="sourceLineNo">139</span>        public static Map&lt;DISTRIBUTION, Double&gt; getDistributionPosition(String sequence, ATTRIBUTE attribute, GROUPING group) throws Exception{<a name="line.139"></a>
<span class="sourceLineNo">140</span>                return ProfeatProperties.getDistributionPosition(new ProteinSequence(sequence), attribute, group);<a name="line.140"></a>
<span class="sourceLineNo">141</span>        }<a name="line.141"></a>
<span class="sourceLineNo">142</span>        <a name="line.142"></a>
<span class="sourceLineNo">143</span>        public static Map&lt;GROUPING, Map&lt;DISTRIBUTION, Double&gt;&gt; getDistributionPosition(String sequence, ATTRIBUTE attribute) throws Exception{<a name="line.143"></a>
<span class="sourceLineNo">144</span>                return ProfeatProperties.getDistributionPosition(new ProteinSequence(sequence), attribute);<a name="line.144"></a>
<span class="sourceLineNo">145</span>        }<a name="line.145"></a>
<span class="sourceLineNo">146</span>        <a name="line.146"></a>
<span class="sourceLineNo">147</span>        public static Map&lt;ATTRIBUTE , Map&lt;GROUPING, Map&lt;DISTRIBUTION, Double&gt;&gt;&gt; getDistributionPosition(String sequence) throws Exception{<a name="line.147"></a>
<span class="sourceLineNo">148</span>                return ProfeatProperties.getDistributionPosition(new ProteinSequence(sequence));<a name="line.148"></a>
<span class="sourceLineNo">149</span>        }<a name="line.149"></a>
<span class="sourceLineNo">150</span>}<a name="line.150"></a>




























































</pre>
</div>
</body>
</html>
