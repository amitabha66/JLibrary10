<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html lang="en">
<head>
<title>Source code</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../stylesheet.css" title="Style">
</head>
<body>
<div class="sourceContainer">
<pre><span class="sourceLineNo">001</span>/*<a name="line.1"></a>
<span class="sourceLineNo">002</span> *                    BioJava development code<a name="line.2"></a>
<span class="sourceLineNo">003</span> *<a name="line.3"></a>
<span class="sourceLineNo">004</span> * This code may be freely distributed and modified under the<a name="line.4"></a>
<span class="sourceLineNo">005</span> * terms of the GNU Lesser General Public Licence.  This should<a name="line.5"></a>
<span class="sourceLineNo">006</span> * be distributed with the code.  If you do not have a copy,<a name="line.6"></a>
<span class="sourceLineNo">007</span> * see:<a name="line.7"></a>
<span class="sourceLineNo">008</span> *<a name="line.8"></a>
<span class="sourceLineNo">009</span> *      http://www.gnu.org/copyleft/lesser.html<a name="line.9"></a>
<span class="sourceLineNo">010</span> *<a name="line.10"></a>
<span class="sourceLineNo">011</span> * Copyright for this code is held jointly by the individual<a name="line.11"></a>
<span class="sourceLineNo">012</span> * authors.  These should be listed in @author doc comments.<a name="line.12"></a>
<span class="sourceLineNo">013</span> *<a name="line.13"></a>
<span class="sourceLineNo">014</span> * For more information on the BioJava project and its aims,<a name="line.14"></a>
<span class="sourceLineNo">015</span> * or to join the biojava-l mailing list, visit the home page<a name="line.15"></a>
<span class="sourceLineNo">016</span> * at:<a name="line.16"></a>
<span class="sourceLineNo">017</span> *<a name="line.17"></a>
<span class="sourceLineNo">018</span> *      http://www.biojava.org/<a name="line.18"></a>
<span class="sourceLineNo">019</span> *<a name="line.19"></a>
<span class="sourceLineNo">020</span> * Created on 20.09.2004<a name="line.20"></a>
<span class="sourceLineNo">021</span> * @author Andreas Prlic<a name="line.21"></a>
<span class="sourceLineNo">022</span> *<a name="line.22"></a>
<span class="sourceLineNo">023</span> */<a name="line.23"></a>
<span class="sourceLineNo">024</span><a name="line.24"></a>
<span class="sourceLineNo">025</span>package org.biojava.bio.structure.align.webstart;<a name="line.25"></a>
<span class="sourceLineNo">026</span><a name="line.26"></a>
<span class="sourceLineNo">027</span>import java.io.IOException;<a name="line.27"></a>
<span class="sourceLineNo">028</span>import java.io.InputStream;<a name="line.28"></a>
<span class="sourceLineNo">029</span>import java.io.OutputStream;<a name="line.29"></a>
<span class="sourceLineNo">030</span>import java.io.PrintWriter;<a name="line.30"></a>
<span class="sourceLineNo">031</span>import java.net.URL;<a name="line.31"></a>
<span class="sourceLineNo">032</span><a name="line.32"></a>
<span class="sourceLineNo">033</span>import javax.jnlp.BasicService;<a name="line.33"></a>
<span class="sourceLineNo">034</span>import javax.jnlp.FileContents;<a name="line.34"></a>
<span class="sourceLineNo">035</span>import javax.jnlp.PersistenceService;<a name="line.35"></a>
<span class="sourceLineNo">036</span>import javax.jnlp.ServiceManager;<a name="line.36"></a>
<span class="sourceLineNo">037</span>import javax.jnlp.UnavailableServiceException;<a name="line.37"></a>
<span class="sourceLineNo">038</span>import javax.xml.parsers.ParserConfigurationException;<a name="line.38"></a>
<span class="sourceLineNo">039</span>import javax.xml.parsers.SAXParser;<a name="line.39"></a>
<span class="sourceLineNo">040</span>import javax.xml.parsers.SAXParserFactory;<a name="line.40"></a>
<span class="sourceLineNo">041</span><a name="line.41"></a>
<span class="sourceLineNo">042</span>import org.biojava.bio.structure.align.util.UserConfiguration;<a name="line.42"></a>
<span class="sourceLineNo">043</span>import org.biojava3.core.util.XMLWriter;<a name="line.43"></a>
<span class="sourceLineNo">044</span><a name="line.44"></a>
<span class="sourceLineNo">045</span>import org.xml.sax.InputSource;<a name="line.45"></a>
<span class="sourceLineNo">046</span>import org.xml.sax.XMLReader;<a name="line.46"></a>
<span class="sourceLineNo">047</span><a name="line.47"></a>
<span class="sourceLineNo">048</span><a name="line.48"></a>
<span class="sourceLineNo">049</span>/** a class to store the config using the Java Web Start<a name="line.49"></a>
<span class="sourceLineNo">050</span> * PersistenService.<a name="line.50"></a>
<span class="sourceLineNo">051</span> * @author Andreas Prlic<a name="line.51"></a>
<span class="sourceLineNo">052</span> */<a name="line.52"></a>
<span class="sourceLineNo">053</span>public class PersistentConfig<a name="line.53"></a>
<span class="sourceLineNo">054</span>{<a name="line.54"></a>
<span class="sourceLineNo">055</span><a name="line.55"></a>
<span class="sourceLineNo">056</span>        PersistenceService ps; <a name="line.56"></a>
<span class="sourceLineNo">057</span>        BasicService bs      ; <a name="line.57"></a>
<span class="sourceLineNo">058</span><a name="line.58"></a>
<span class="sourceLineNo">059</span>        public PersistentConfig()<a name="line.59"></a>
<span class="sourceLineNo">060</span>        throws UnavailableServiceException<a name="line.60"></a>
<span class="sourceLineNo">061</span>        {<a name="line.61"></a>
<span class="sourceLineNo">062</span>                try {<a name="line.62"></a>
<span class="sourceLineNo">063</span>                        ps = (PersistenceService)ServiceManager.lookup("javax.jnlp.PersistenceService"); <a name="line.63"></a>
<span class="sourceLineNo">064</span>                        bs = (BasicService)ServiceManager.lookup("javax.jnlp.BasicService");<a name="line.64"></a>
<span class="sourceLineNo">065</span>                } catch (Exception e){<a name="line.65"></a>
<span class="sourceLineNo">066</span>                        System.err.println("Can't init webstart - persistent configuration. " + e.getMessage() );<a name="line.66"></a>
<span class="sourceLineNo">067</span>                }<a name="line.67"></a>
<span class="sourceLineNo">068</span>        }<a name="line.68"></a>
<span class="sourceLineNo">069</span><a name="line.69"></a>
<span class="sourceLineNo">070</span>        /** writes the configuration<a name="line.70"></a>
<span class="sourceLineNo">071</span>         * <a name="line.71"></a>
<span class="sourceLineNo">072</span>         * @param config<a name="line.72"></a>
<span class="sourceLineNo">073</span>         */<a name="line.73"></a>
<span class="sourceLineNo">074</span>        public void save(UserConfiguration config ) {<a name="line.74"></a>
<span class="sourceLineNo">075</span>                if (ps != null &amp;&amp; bs != null) { <a name="line.75"></a>
<span class="sourceLineNo">076</span>                        // Persistent Service is available, running as javaws<a name="line.76"></a>
<span class="sourceLineNo">077</span>                        saveWebStart(config) ;<a name="line.77"></a>
<span class="sourceLineNo">078</span>                } else {<a name="line.78"></a>
<span class="sourceLineNo">079</span>                        System.err.println("can not save using persistentservice!");<a name="line.79"></a>
<span class="sourceLineNo">080</span>                }<a name="line.80"></a>
<span class="sourceLineNo">081</span>        }<a name="line.81"></a>
<span class="sourceLineNo">082</span><a name="line.82"></a>
<span class="sourceLineNo">083</span>        private void saveWebStart(UserConfiguration config ){<a name="line.83"></a>
<span class="sourceLineNo">084</span>                //System.out.println("saving webstart");<a name="line.84"></a>
<span class="sourceLineNo">085</span><a name="line.85"></a>
<span class="sourceLineNo">086</span><a name="line.86"></a>
<span class="sourceLineNo">087</span>                try {<a name="line.87"></a>
<span class="sourceLineNo">088</span><a name="line.88"></a>
<span class="sourceLineNo">089</span>                        // find all the muffins for our URL<a name="line.89"></a>
<span class="sourceLineNo">090</span>                        URL codebase = bs.getCodeBase(); <a name="line.90"></a>
<span class="sourceLineNo">091</span><a name="line.91"></a>
<span class="sourceLineNo">092</span>                        FileContents fc = null ;<a name="line.92"></a>
<span class="sourceLineNo">093</span><a name="line.93"></a>
<span class="sourceLineNo">094</span><a name="line.94"></a>
<span class="sourceLineNo">095</span>                        try {           <a name="line.95"></a>
<span class="sourceLineNo">096</span>                                // test if persistent storage already created<a name="line.96"></a>
<span class="sourceLineNo">097</span><a name="line.97"></a>
<span class="sourceLineNo">098</span>                                fc = ps.get(codebase);<a name="line.98"></a>
<span class="sourceLineNo">099</span><a name="line.99"></a>
<span class="sourceLineNo">100</span>                                ps.delete(codebase);<a name="line.100"></a>
<span class="sourceLineNo">101</span><a name="line.101"></a>
<span class="sourceLineNo">102</span>                        } catch (IOException e){<a name="line.102"></a>
<span class="sourceLineNo">103</span>                        }<a name="line.103"></a>
<span class="sourceLineNo">104</span><a name="line.104"></a>
<span class="sourceLineNo">105</span>                        // seems not, create it first<a name="line.105"></a>
<span class="sourceLineNo">106</span>                        ps.create(codebase,3000000);<a name="line.106"></a>
<span class="sourceLineNo">107</span>                        fc = ps.get(codebase);<a name="line.107"></a>
<span class="sourceLineNo">108</span><a name="line.108"></a>
<span class="sourceLineNo">109</span><a name="line.109"></a>
<span class="sourceLineNo">110</span>                        OutputStream os = fc.getOutputStream(true); <a name="line.110"></a>
<span class="sourceLineNo">111</span><a name="line.111"></a>
<span class="sourceLineNo">112</span>                        //StringWriter sw = new StringWriter();<a name="line.112"></a>
<span class="sourceLineNo">113</span>                        //StringWriter stw = new StringWriter(os)   ;<a name="line.113"></a>
<span class="sourceLineNo">114</span>                        PrintWriter pw = new PrintWriter(os,true);<a name="line.114"></a>
<span class="sourceLineNo">115</span>                        XMLWriter xw = config.toXML(pw);<a name="line.115"></a>
<span class="sourceLineNo">116</span><a name="line.116"></a>
<span class="sourceLineNo">117</span><a name="line.117"></a>
<span class="sourceLineNo">118</span>                        pw.flush();<a name="line.118"></a>
<span class="sourceLineNo">119</span>                        os.flush();<a name="line.119"></a>
<span class="sourceLineNo">120</span><a name="line.120"></a>
<span class="sourceLineNo">121</span>                        xw.close();<a name="line.121"></a>
<span class="sourceLineNo">122</span>                        pw.close();<a name="line.122"></a>
<span class="sourceLineNo">123</span>                        os.close(); <a name="line.123"></a>
<span class="sourceLineNo">124</span><a name="line.124"></a>
<span class="sourceLineNo">125</span><a name="line.125"></a>
<span class="sourceLineNo">126</span>                } catch (Exception e) {<a name="line.126"></a>
<span class="sourceLineNo">127</span>                        System.err.println(e.getMessage());<a name="line.127"></a>
<span class="sourceLineNo">128</span>                }<a name="line.128"></a>
<span class="sourceLineNo">129</span>        }<a name="line.129"></a>
<span class="sourceLineNo">130</span><a name="line.130"></a>
<span class="sourceLineNo">131</span><a name="line.131"></a>
<span class="sourceLineNo">132</span>        /** loads Config from PersistenceService<a name="line.132"></a>
<span class="sourceLineNo">133</span>         *  returns null if no PErsistenceService has been created ...<a name="line.133"></a>
<span class="sourceLineNo">134</span>         *  <a name="line.134"></a>
<span class="sourceLineNo">135</span>         *  @return WebStartConfiguration<a name="line.135"></a>
<span class="sourceLineNo">136</span>         */<a name="line.136"></a>
<span class="sourceLineNo">137</span>        public UserConfiguration load() {<a name="line.137"></a>
<span class="sourceLineNo">138</span>                if (ps != null &amp;&amp; bs != null) { <a name="line.138"></a>
<span class="sourceLineNo">139</span>                        // Persistent Service is available, running as javaws<a name="line.139"></a>
<span class="sourceLineNo">140</span>                        return loadWebStart() ;<a name="line.140"></a>
<span class="sourceLineNo">141</span>                } else {<a name="line.141"></a>
<span class="sourceLineNo">142</span>                        System.err.println("can not load from persistentservice!");<a name="line.142"></a>
<span class="sourceLineNo">143</span>                }<a name="line.143"></a>
<span class="sourceLineNo">144</span>                return null ;<a name="line.144"></a>
<span class="sourceLineNo">145</span>        }<a name="line.145"></a>
<span class="sourceLineNo">146</span><a name="line.146"></a>
<span class="sourceLineNo">147</span><a name="line.147"></a>
<span class="sourceLineNo">148</span>        /** loads Config from PersistenceService<a name="line.148"></a>
<span class="sourceLineNo">149</span>         *  returns null if no PErsistenceService has been created ...<a name="line.149"></a>
<span class="sourceLineNo">150</span>         */<a name="line.150"></a>
<span class="sourceLineNo">151</span>        private UserConfiguration loadWebStart() {<a name="line.151"></a>
<span class="sourceLineNo">152</span>                UserConfiguration config = null;<a name="line.152"></a>
<span class="sourceLineNo">153</span>                try { <a name="line.153"></a>
<span class="sourceLineNo">154</span>                        URL codebase = bs.getCodeBase(); <a name="line.154"></a>
<span class="sourceLineNo">155</span><a name="line.155"></a>
<span class="sourceLineNo">156</span>                        FileContents fc = null ;<a name="line.156"></a>
<span class="sourceLineNo">157</span><a name="line.157"></a>
<span class="sourceLineNo">158</span>                        try {<a name="line.158"></a>
<span class="sourceLineNo">159</span><a name="line.159"></a>
<span class="sourceLineNo">160</span>                                fc = ps.get(codebase);<a name="line.160"></a>
<span class="sourceLineNo">161</span>                        } catch (IOException e){<a name="line.161"></a>
<span class="sourceLineNo">162</span>                                // has not been created, so nothing can be loaded ...<a name="line.162"></a>
<span class="sourceLineNo">163</span>                                e.printStackTrace();<a name="line.163"></a>
<span class="sourceLineNo">164</span>                                return null ;<a name="line.164"></a>
<span class="sourceLineNo">165</span>                        }       <a name="line.165"></a>
<span class="sourceLineNo">166</span><a name="line.166"></a>
<span class="sourceLineNo">167</span><a name="line.167"></a>
<span class="sourceLineNo">168</span>                        // parse the XML file ...<a name="line.168"></a>
<span class="sourceLineNo">169</span>                        InputStream stream = fc.getInputStream();<a name="line.169"></a>
<span class="sourceLineNo">170</span>                        config = parseConfigFile(stream);<a name="line.170"></a>
<span class="sourceLineNo">171</span><a name="line.171"></a>
<span class="sourceLineNo">172</span>                } catch (Exception e) {<a name="line.172"></a>
<span class="sourceLineNo">173</span>                        System.err.println(e.getMessage());<a name="line.173"></a>
<span class="sourceLineNo">174</span>                }<a name="line.174"></a>
<span class="sourceLineNo">175</span><a name="line.175"></a>
<span class="sourceLineNo">176</span>                return config ;<a name="line.176"></a>
<span class="sourceLineNo">177</span><a name="line.177"></a>
<span class="sourceLineNo">178</span>        }<a name="line.178"></a>
<span class="sourceLineNo">179</span><a name="line.179"></a>
<span class="sourceLineNo">180</span><a name="line.180"></a>
<span class="sourceLineNo">181</span>        private UserConfiguration parseConfigFile(InputStream inStream) {<a name="line.181"></a>
<span class="sourceLineNo">182</span><a name="line.182"></a>
<span class="sourceLineNo">183</span>                try {<a name="line.183"></a>
<span class="sourceLineNo">184</span>                        SAXParserFactory spfactory =<a name="line.184"></a>
<span class="sourceLineNo">185</span>                                SAXParserFactory.newInstance();<a name="line.185"></a>
<span class="sourceLineNo">186</span><a name="line.186"></a>
<span class="sourceLineNo">187</span>                        SAXParser saxParser = null ;<a name="line.187"></a>
<span class="sourceLineNo">188</span><a name="line.188"></a>
<span class="sourceLineNo">189</span>                        try{<a name="line.189"></a>
<span class="sourceLineNo">190</span>                                saxParser =<a name="line.190"></a>
<span class="sourceLineNo">191</span>                                        spfactory.newSAXParser();<a name="line.191"></a>
<span class="sourceLineNo">192</span>                        } catch (ParserConfigurationException e) {<a name="line.192"></a>
<span class="sourceLineNo">193</span>                                e.printStackTrace();<a name="line.193"></a>
<span class="sourceLineNo">194</span>                        }<a name="line.194"></a>
<span class="sourceLineNo">195</span><a name="line.195"></a>
<span class="sourceLineNo">196</span>                        XMLReader xmlreader = saxParser.getXMLReader();<a name="line.196"></a>
<span class="sourceLineNo">197</span><a name="line.197"></a>
<span class="sourceLineNo">198</span>                        ConfigXMLHandler cont_handle = new ConfigXMLHandler();<a name="line.198"></a>
<span class="sourceLineNo">199</span>                        xmlreader.setContentHandler(cont_handle);<a name="line.199"></a>
<span class="sourceLineNo">200</span>                        xmlreader.setErrorHandler(new org.xml.sax.helpers.DefaultHandler());<a name="line.200"></a>
<span class="sourceLineNo">201</span><a name="line.201"></a>
<span class="sourceLineNo">202</span>                        InputSource insource = new InputSource() ;<a name="line.202"></a>
<span class="sourceLineNo">203</span>                        insource.setByteStream(inStream);<a name="line.203"></a>
<span class="sourceLineNo">204</span><a name="line.204"></a>
<span class="sourceLineNo">205</span>                        // the actual parsing starts now ...<a name="line.205"></a>
<span class="sourceLineNo">206</span>                        xmlreader.parse(insource);<a name="line.206"></a>
<span class="sourceLineNo">207</span><a name="line.207"></a>
<span class="sourceLineNo">208</span><a name="line.208"></a>
<span class="sourceLineNo">209</span>                        UserConfiguration config = cont_handle.getConfig();<a name="line.209"></a>
<span class="sourceLineNo">210</span>                        return config ;<a name="line.210"></a>
<span class="sourceLineNo">211</span><a name="line.211"></a>
<span class="sourceLineNo">212</span>                } catch (Exception e){<a name="line.212"></a>
<span class="sourceLineNo">213</span>                        e.printStackTrace();<a name="line.213"></a>
<span class="sourceLineNo">214</span>                        return null;<a name="line.214"></a>
<span class="sourceLineNo">215</span>                }<a name="line.215"></a>
<span class="sourceLineNo">216</span><a name="line.216"></a>
<span class="sourceLineNo">217</span>        }<a name="line.217"></a>
<span class="sourceLineNo">218</span>}<a name="line.218"></a>




























































</pre>
</div>
</body>
</html>
